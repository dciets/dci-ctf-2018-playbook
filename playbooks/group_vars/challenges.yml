---
available_challenges:
  #########################################
  # Coding challenges
  #########################################
  - name: coding1
    path: /opt/dci-ctf-2018/challenges/coding/coding1
    ports: "0.0.0.0:5001:5001"

  #########################################
  # Pwning challenges
  #########################################
  - name: level1
    path: '/opt/dci-ctf-2018/challenges/pwning/level1'
    ports: "0.0.0.0:10001:3000"

  - name: level2
    path: '/opt/dci-ctf-2018/challenges/pwning/level2'
    ports: "0.0.0.0:10002:3000"

  - name: level3
    path: '/opt/dci-ctf-2018/challenges/pwning/level3'
    ports: "0.0.0.0:10003:3000"

  - name: level4
    path: '/opt/dci-ctf-2018/challenges/pwning/level4'
    ports: "0.0.0.0:10004:3000"

  - name: echo_server
    path: '/opt/dci-ctf-2018/challenges/pwning/echo_server'
    ports: "0.0.0.0:10005:3000"

  - name: info_service
    path: '/opt/dci-ctf-2018/challenges/pwning/info_service'
    ports: "0.0.0.0:10006:3000"


# `challenges` variable defaults to the `available_challenges` variable if no --extra-vars `challenge` is passed
# when executing the playbook. If --extra-vars `challenge` variable is defined, the `challenges` list will be filtered
# by challenge names. This allow us to build / run a single or a subset of challenges via something like:
#
#     ‚ùØ ansible-playbook playbooks/challenges.yml -u root --extra-vars "challenge=coding1"
#
# The above command will only build and run the `coding1` challenge since the list of challenges will be filtered.
challenges: "{{ available_challenges if challenge is not defined else available_challenges | selectattr('name', 'equalto', challenge) | list }}"
